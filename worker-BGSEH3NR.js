var r=null;(async()=>{try{console.time("[RubberbandWorker] WASM compile");let e=await(await fetch("/assets/rubberband/rubberband.umd.min.js")).text();if((0,eval)(e),!self.rubberband)throw new Error("Rubberband library not loaded correctly");let u=await WebAssembly.compileStreaming(fetch("/assets/rubberband/rubberband.wasm"));r=await self.rubberband.RubberBandInterface.initialize(u),console.timeEnd("[RubberbandWorker] WASM compile"),postMessage({ready:!0})}catch(b){console.error("[RubberbandWorker] Initialization error:",b);let e={error:`Failed to initialize rubberband-wasm: ${b instanceof Error?b.message:String(b)}`};postMessage(e)}})();onmessage=async function(b){if(console.log("[RubberbandWorker] Message received from main script",b.data),!r){postMessage({error:"Rubberband API not initialized yet"});return}try{let{channelBuffers:e,sampleRate:u,pitch:p,tempo:m}=b.data;if(!e||e.length===0)throw new Error("No channel buffers provided");if(u<=0)throw new Error("Invalid sample rate");if(m<=0)throw new Error("Invalid tempo value");let M=Math.ceil(e[0].length*m),g=e.map(()=>new Float32Array(M)),s=r.rubberband_new(u,e.length,0,1,1),W=Math.pow(2,p/12);r.rubberband_set_pitch_scale(s,W),r.rubberband_set_time_ratio(s,m);let o=r.rubberband_get_samples_required(s),l=r.malloc(e.length*4),d=[];for(let a=0;a<e.length;a++){let n=r.malloc(o*4);d.push(n),r.memWritePtr(l+a*4,n)}r.rubberband_set_expected_input_duration(s,e[0].length);let h=Date.now(),f=a=>{if(Date.now()-h>250){let n={progress:Math.round(a()*100)};postMessage(n),h=Date.now()}};postMessage({status:"Studying...",progress:0}),console.time("[RubberbandWorker] study");let t=0;for(;t<e[0].length;){f(()=>t/e[0].length*.5),e.forEach((i,c)=>r.memWrite(d[c],i.subarray(t,t+o)));let a=Math.min(o,e[0].length-t);t+=a;let n=t>=e[0].length;r.rubberband_study(s,l,a,n?1:0)}console.timeEnd("[RubberbandWorker] study"),postMessage({status:"Processing...",progress:50}),console.time("[RubberbandWorker] process"),t=0;let R=0,_=(a=!1)=>{for(;;){let n=r.rubberband_available(s);if(n<1||!a&&n<o)break;let i=r.rubberband_retrieve(s,l,Math.min(o,n));d.forEach((c,w)=>{let y=r.memReadF32(c,i);g[w].set(y,R)}),R+=i}};for(;t<e[0].length;){f(()=>.5+t/e[0].length*.5),e.forEach((i,c)=>r.memWrite(d[c],i.subarray(t,t+o)));let a=Math.min(o,e[0].length-t);t+=a;let n=t>=e[0].length;r.rubberband_process(s,l,a,n?1:0),_(!1)}_(!0),console.timeEnd("[RubberbandWorker] process"),postMessage({progress:100}),d.forEach(a=>r.free(a)),r.free(l),r.rubberband_delete(s),postMessage({channelBuffers:g})}catch(e){console.error("[RubberbandWorker] Processing error:",e);let u={error:`Audio processing failed: ${e instanceof Error?e.message:String(e)}`};postMessage(u)}};
